JogJS todo:
1. render primarily from the buffer not from streaming
2. implement re-rendering
3. implement "infinite" x-drag (freeze on mouseup, unfreeze when clicked on other element)
4. determine penalty for moving very large canvas (if it's very different from small canvas)
5. if penalty small, make canvas size of buffer, if penalty large, make canvas resize/re-render dynamically when dragging then reset when drag is released
6. implement data buffer resets w/ re-rendering
7. add limits to x-dragging according to beginning / end of data
8. implement yScaling with single range
9. implement yScaling with programmatically hot selectable range
10. implement auto-scaling
11. add momentum to scroll dragging
12. implement x-scale programmatic change
13. implement programmatic x-scale "zooming"
14. data delay (allows pre-rendering)
15. interpolation options - steady or falling - for long data ingestion delays
16. grid bg layer (programmatically calculated)
17. time stamps
18. bg style differentiation for missing data
19. graph dashing for missing data
20. foreground / overlay shading for missing data
21. axis labels
22. axis gradations
23. automatic series color changes by y value range
24. programmatic bg color change 
25. automatic background color changes by callback (e.g. using y value ranges)
26. vertical bar marker addition
27. vertical marker styling
28. ornamental markers below plot
29. ornamental markers on graph

total = ~20h