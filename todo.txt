JogJS todo:
X 1. render primarily from the buffer not from streaming
X 2. implement re-rendering
X 3. implement "infinite" x-drag (freeze on mouseup, unfreeze when clicked on other element)

X 4. determine penalty for moving very large canvas (if it's very different from small canvas)
X 5. if penalty small, make canvas size of buffer, if penalty large, make canvas resize/re-render dynamically when dragging then reset when drag is released
X 6. implement data buffer resets w/ re-rendering
X 7. add limits to x-dragging according to beginning / end of data
8. data delay (allows pre-rendering)
9. implement yScaling with single range
10. implement yScaling with programmatically hot selectable range
11. implement auto-scaling
12. add momentum to scroll dragging
13. implement x-scale programmatic change
14. implement programmatic x-scale "zooming" 
15. interpolation options - steady or falling - for long data ingestion delays
16. grid bg layer (programmatically calculated)
17. time stamps
18. bg style differentiation for missing data
19. graph dashing for missing data
20. foreground / overlay shading for missing data
21. axis labels
22. axis gradations
23. automatic series color changes by y value range
24. programmatic bg color change 
25. automatic background color changes by callback (e.g. using y value ranges)
26. vertical bar marker addition
27. vertical marker styling
28. ornamental markers below plot
29. ornamental markers on graph

total = ~20h